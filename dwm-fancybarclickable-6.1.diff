--- a/config.def.h
+++ b/config.def.h
@@ -100,6 +100,7 @@
 	/* click                event mask      button          function        argument */
 	{ ClkLtSymbol,          0,              Button1,        setlayout,      {0} },
 	{ ClkLtSymbol,          0,              Button3,        setlayout,      {.v = &layouts[2]} },
+	{ ClkWinTitle,          0,              Button1,        focusonclick,   {0} },
 	{ ClkWinTitle,          0,              Button2,        zoom,           {0} },
 	{ ClkStatusText,        0,              Button2,        spawn,          {.v = termcmd } },
 	{ ClkClientWin,         MODKEY,         Button1,        movemouse,      {0} },
--- a/dwm.c
+++ b/dwm.c
@@ -130,6 +130,8 @@
 	Monitor *next;
 	Window barwin;
 	const Layout *lt[2];
+	int titlebarbegin;
+	int titlebarend;
 };
 
 typedef struct {
@@ -169,6 +171,7 @@
 static void focus(Client *c);
 static void focusin(XEvent *e);
 static void focusmon(const Arg *arg);
+static void focusonclick(const Arg *arg);
 static void focusstack(const Arg *arg);
 static int getrootptr(int *x, int *y);
 static long getstate(Window w);
@@ -438,10 +441,12 @@
 			arg.ui = 1 << i;
 		} else if (ev->x < x + blw)
 			click = ClkLtSymbol;
-		else if (ev->x > selmon->ww - TEXTW(stext))
+		else if (ev->x > selmon->titlebarend)
 			click = ClkStatusText;
-		else
-			click = ClkWinTitle;
+		else {
+			arg.ui = ev->x;
+ 			click = ClkWinTitle;
+		}
 	} else if ((c = wintoclient(ev->window))) {
 		focus(c);
 		click = ClkClientWin;
@@ -449,7 +454,7 @@
 	for (i = 0; i < LENGTH(buttons); i++)
 		if (click == buttons[i].click && buttons[i].func && buttons[i].button == ev->button
 		&& CLEANMASK(buttons[i].mask) == CLEANMASK(ev->state))
-			buttons[i].func(click == ClkTagBar && buttons[i].arg.i == 0 ? &arg : &buttons[i].arg);
+			buttons[i].func((click == ClkTagBar || click == ClkWinTitle) && buttons[i].arg.i == 0 ? &arg : &buttons[i].arg);
 }
 
 void
@@ -704,13 +709,15 @@
 void
 drawbar(Monitor *m)
 {
-	int x, xx, w, dx;
-	unsigned int i, occ = 0, urg = 0;
-	Client *c;
+	int x, xx, w, dx, ow, mw = 0, extra, tw;
+	unsigned int i, occ = 0, urg = 0, n = 0;
+	Client *c, *firstvis;
 
 	dx = (drw->fonts[0]->ascent + drw->fonts[0]->descent + 2) / 4;
 
 	for (c = m->clients; c; c = c->next) {
+		if (ISVISIBLE(c))
+			n++;
 		occ |= c->tags;
 		if (c->isurgent)
 			urg |= c->tags;
@@ -736,18 +743,59 @@
 			x = xx;
 			w = m->ww - xx;
 		}
+		m->titlebarend = x;
 		drw_text(drw, x, 0, w, bh, stext, 0);
-	} else
+	} else {
 		x = m->ww;
-	if ((w = x - xx) > bh) {
-		x = xx;
-		if (m->sel) {
-			drw_setscheme(drw, m == selmon ? &scheme[SchemeSel] : &scheme[SchemeNorm]);
-			drw_text(drw, x, 0, w, bh, m->sel->name, 0);
-			drw_rect(drw, x + 1, 1, dx, dx, m->sel->isfixed, m->sel->isfloating, 0);
+		m->titlebarbegin = x;
+	}
+	for (c = m->clients; c && !ISVISIBLE(c); c = c->next);
+	firstvis = c;
+
+	w = x - xx;
+	x = xx;
+
+	if (n > 0) {
+		mw = w / n;
+		extra = 0;
+		i = 0;
+
+		while (c) {
+			tw = TEXTW(c->name);
+			if (tw < mw)
+				extra += (mw - tw);
+			else
+				i++;
+			for (c = c->next; c && !ISVISIBLE(c); c = c->next);
+		}
+
+		if (i > 0)
+			mw += extra / i;
+
+		c = firstvis;
+		xx = x;
+	}
+	m->titlebarbegin = x;
+	while (w > bh) {
+		if (c) {
+			ow = w;
+			tw = TEXTW(c->name);
+			w = MIN(ow, tw);
+
+			if (w > mw)
+				w = mw;
+
+			drw_setscheme(drw, m->sel == c ? &scheme[SchemeSel] : &scheme[SchemeNorm]);
+			drw_text(drw, x, 0, w, bh, c->name, 0);
+			drw_rect(drw, x + 1, 1, dx, dx, c->isfixed, c->isfloating, 0);
+
+			x += w;
+			w = ow - w;
+			for (c = c->next; c && !ISVISIBLE(c); c = c->next);
 		} else {
 			drw_setscheme(drw, &scheme[SchemeNorm]);
 			drw_rect(drw, x, 0, w, bh, 1, 0, 1);
+			break;
 		}
 	}
 	drw_map(drw, m->barwin, 0, 0, m->ww, bh);
@@ -840,6 +888,56 @@
 					in gedit and anjuta */
 	selmon = m;
 	focus(NULL);
+}
+
+void
+focusonclick(const Arg *arg)
+{
+	int x, w, mw = 0, tw, n = 0, i = 0, extra = 0;
+	Monitor *m = selmon;
+	Client *c, *firstvis;
+
+	for (c = m->clients; c && !ISVISIBLE(c); c = c->next);
+	firstvis = c;
+
+	for (c = m->clients; c; c = c->next)
+		if (ISVISIBLE(c))
+			n++;
+
+	if (n > 0) {
+		mw = (m->titlebarend - m->titlebarbegin) / n;
+		c = firstvis;
+		while (c) {
+			tw = TEXTW(c->name);
+			if (tw < mw)
+				extra += (mw - tw);
+			else
+				i++;
+			for (c = c->next; c && !ISVISIBLE(c); c = c->next);
+		}
+		if (i > 0)
+			mw += extra / i;
+	}
+
+	x = m->titlebarbegin;
+
+	c = firstvis;
+	while (x < m->titlebarend) {
+		if (c) {
+			w = MIN(TEXTW(c->name), mw);
+			if (x < arg->i && x + w > arg->i) {
+				focus(c);
+				restack(selmon);
+				break;
+			} else {
+				x += w;
+			}
+
+			for (c = c->next; c && !ISVISIBLE(c); c = c->next);
+		} else {
+			break;
+		}
+	}
 }
 
 void
@@ -1254,8 +1352,7 @@
 		}
 		if (ev->atom == XA_WM_NAME || ev->atom == netatom[NetWMName]) {
 			updatetitle(c);
-			if (c == c->mon->sel)
-				drawbar(c->mon);
+			drawbar(c->mon);
 		}
 		if (ev->atom == netatom[NetWMWindowType])
 			updatewindowtype(c);
